name: Publish Python and Rust Packages

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      publish_imu:
        description: "Publish imu package"
        type: boolean
        default: false
      publish_hexmove:
        description: "Publish hexmove package"
        type: boolean
        default: false
      publish_hiwonder:
        description: "Publish hiwonder package"
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

concurrency:
  group: "publish"
  cancel-in-progress: true

jobs:
  build-wheels:
    name: Build ${{ matrix.arch }} wheels
    timeout-minutes: 360
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64, s390x]
        include:
          - arch: x86_64
            skip: "pp* *-musllinux*"
          - arch: aarch64
            skip: "pp* *-musllinux* cp313-*"
          - arch: s390x
            skip: "pp* *-musllinux* cp312-* cp313-*"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.arch }}-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          load: true
          tags: imu-builder:${{ matrix.arch }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix for https://github.com/docker/build-push-action/issues/252
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build wheels
        env:
          CIBW_SKIP: ${{ matrix.skip }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
        run: |
          mkdir -p dist
          docker run --rm \
            -v $(pwd):/app \
            -v $(pwd)/dist:/app/dist \
            imu-builder:${{ matrix.arch }} \
            python3.11 -m build --wheel --outdir dist

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.arch }}
          path: dist/*.whl

  build-source-dist:
    name: Build source distribution
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-sdist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-sdist-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: imu-builder:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build source distribution
        run: make docker-build-sdist

      - name: Upload source distribution
        uses: actions/upload-artifact@v3
        with:
          name: source-dist
          path: dist/*.tar.gz

  publish-wheels:
    needs: [build-wheels, build-source-dist]
    name: Publish Python wheels
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Move wheels to dist directory
        run: |
          mkdir -p final_dist
          find dist -name "*.whl" -exec mv {} final_dist/ \;
          find dist -name "*.tar.gz" -exec mv {} final_dist/ \;

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: final_dist/

  publish-rust:
    name: Build and publish Rust package
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: ${{ inputs.publish_imu || inputs.publish_hexmove || inputs.publish_hiwonder }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-rust-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-rust-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: imu-builder:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Publish imu package to crates.io
        if: ${{ inputs.publish_imu }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/usr/local/cargo/registry \
            -v ~/.cargo/git:/usr/local/cargo/git \
            -e CARGO_REGISTRY_TOKEN \
            imu-builder:latest \
            cargo publish -p imu

      - name: Publish hexmove package to crates.io
        if: ${{ inputs.publish_hexmove }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/usr/local/cargo/registry \
            -v ~/.cargo/git:/usr/local/cargo/git \
            -e CARGO_REGISTRY_TOKEN \
            imu-builder:latest \
            cargo publish -p hexmove

      - name: Publish hiwonder package to crates.io
        if: ${{ inputs.publish_hiwonder }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/usr/local/cargo/registry \
            -v ~/.cargo/git:/usr/local/cargo/git \
            -e CARGO_REGISTRY_TOKEN \
            imu-builder:latest \
            cargo publish -p hiwonder
